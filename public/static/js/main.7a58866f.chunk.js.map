{"version":3,"sources":["img/edit.svg","img/delete.svg","components/Navbar.js","pages/Login.js","components/HomePageCard.js","components/Stopwatch.js","components/HistoryItem.js","components/History.js","components/ProjectModal.js","pages/HomePage.js","PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","src","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","exact","this","props","loggedIn","onClick","logout","Component","Login","state","email","password","loading","handleChange","bind","handleSubmit","evt","setState","target","name","value","preventDefault","login","setTimeout","history","push","alert","onSubmit","htmlFor","placeholder","required","autoFocus","onChange","role","HomePageCard","size","title","children","defaultProps","Stopwatch","timerOn","timerStart","timerTime","project","startTimer","stopTimer","resetTimer","saveTime","Date","now","timer","setInterval","clearInterval","projectId","projects","find","hours","Math","floor","slice","minutes","addRecord","_id","e","seconds","map","p","key","toggleModal","disabled","HistoryItem","delRecord","editRecord","scope","date","time","timeSpent","edit","del","History","records","i","dateString","timeOfDay","timeSpentString","ProjectModal","projectName","handleHide","addProject","Modal","aria-labelledby","centered","show","onHide","Header","closeButton","Title","Body","HomePage","modalVisible","refreshHistory","refreshProjects","axios","get","process","withCredentials","then","res","data","err","console","log","timeSpentInt","newDate","toDateString","newTime","toLocaleTimeString","undefined","hour","minute","newRecord","length","post","status","st","newProject","user","userId","delete","PrivateRoute","path","render","App","routeProps","Boolean","window","location","hostname","match","ReactDOM","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7a58866f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/edit.d37d9400.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.5a226e36.svg\";","import React, { Component } from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport './Navbar.css';\n\nexport default class Navbar extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-md navbar-light bg-light Navbar\">\n          <Link to=\"/\" className=\"navbar-brand\">\n            <img\n              className=\"Navbar-logo\"\n              src=\"img/eventek_logo.svg\"\n              alt=\"logo\"\n            />\n            <span className=\"Navbar-title\">Time Manager</span>\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <NavLink exact to=\"/\" className=\"nav-link\">\n                  Log Time\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink exact to=\"/dashboard\" className=\"nav-link\">\n                  Dashboard\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink exact to=\"/settings\" className=\"nav-link\">\n                  Settings\n                </NavLink>\n              </li>\n            </ul>\n            <form className=\"form-inline \">\n              {this.props.loggedIn ? (\n                <button\n                  onClick={this.props.logout}\n                  className=\"form-control mr-sm-2 btn btn-outline-info my-2 my-sm-0\"\n                >\n                  Logout\n                </button>\n              ) : (\n                <Link to=\"/login\">\n                  <button className=\"form-control mr-sm-2 btn btn-outline-info my-2 my-sm-0\">\n                    Login\n                  </button>\n                </Link>\n              )}\n            </form>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Login.css';\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { email: '', password: '', loading: false };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(evt) {\n    this.setState({ [evt.target.name]: evt.target.value });\n  }\n  handleSubmit(evt) {\n    evt.preventDefault();\n    this.setState({\n      email: this.state.email,\n      password: this.state.password,\n      loading: true\n    });\n    this.props.login(this.state.email, this.state.password);\n    setTimeout(() => {\n      if (this.props.loggedIn) {\n        this.props.history.push('/');\n      } else {\n        setTimeout(() => {\n          if (!this.props.loggedIn) {\n            alert('Timed out!');\n            this.setState({\n              loading: false\n            });\n          }\n        }, 5000);\n      }\n    }, 1000);\n  }\n  render() {\n    return (\n      <div className=\"Login container text-center\">\n        <form className=\"form-signin\" onSubmit={this.handleSubmit}>\n          <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\n          <label htmlFor=\"inputEmail\" className=\"sr-only\">\n            Email address\n          </label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            className=\"form-control\"\n            placeholder=\"Email address\"\n            required\n            autoFocus\n            value={this.state.email}\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"inputPassword\" className=\"sr-only\">\n            Password\n          </label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            className=\"form-control\"\n            placeholder=\"Password\"\n            required\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n          <button className=\"btn btn-lg btn-info btn-block mt-3\" type=\"submit\">\n            {!this.state.loading ? (\n              <span>Sign In</span>\n            ) : (\n              <span className=\"Spinner spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </span>\n            )}\n          </button>\n          <Link to=\"/signup\">\n            <p className=\"Signup mt-3 mb-3\">Signup</p>\n          </Link>\n          <p className=\"mt-5 mb-3 text-muted\">Reset Password</p>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './HomePageCard.css';\n\nexport default class HomePageCard extends Component {\n  static defaultProps = {\n    size: 'col-md-6 col-lg-4'\n  };\n  render() {\n    return (\n      <div className={this.props.size}>\n        <div className=\"HomePage-card card\">\n          <div className=\"card-header\">{this.props.title}</div>\n          <div className=\"card-body\">{this.props.children}</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './Stopwatch.css';\n\nexport default class Stopwatch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timerOn: false,\n      timerStart: 0,\n      timerTime: 0,\n      project: ''\n    };\n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n    this.resetTimer = this.resetTimer.bind(this);\n    this.saveTime = this.saveTime.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  startTimer() {\n    this.setState({\n      timerOn: true,\n      timerTime: this.state.timerTime,\n      timerStart: Date.now() - this.state.timerTime\n    });\n    this.timer = setInterval(() => {\n      this.setState({\n        timerTime: Date.now() - this.state.timerStart\n      });\n    }, 10);\n  }\n  stopTimer() {\n    this.setState({ timerOn: false });\n    clearInterval(this.timer);\n  }\n  resetTimer() {\n    this.setState({\n      timerStart: 0,\n      timerTime: 0\n    });\n  }\n  saveTime() {\n    const projectId = this.props.projects.find(\n      ({ name }) => name === this.state.project\n    );\n    const { timerTime } = this.state;\n    let hours = ('0' + Math.floor(timerTime / 3600000)).slice(-2);\n    let minutes = ('0' + (Math.floor(timerTime / 60000) % 60)).slice(-2);\n    let seconds = Math.floor(timerTime / 1000) % 60;\n    seconds > 30 && minutes++;\n    if (hours >= 1 || minutes >= 1) {\n      this.props.addRecord(\n        `${hours}:${('000' + minutes).slice(-2)}`,\n        timerTime,\n        projectId._id\n      );\n    } else {\n      alert('Time spent must be higher than 1 minute!');\n    }\n    this.resetTimer();\n  }\n  handleChange(e) {\n    let { value } = e.target;\n    this.setState({\n      project: value\n    });\n  }\n  render() {\n    const { timerTime } = this.state;\n    let seconds = ('0' + (Math.floor(timerTime / 1000) % 60)).slice(-2);\n    let minutes = ('0' + (Math.floor(timerTime / 60000) % 60)).slice(-2);\n    let hours = ('0' + Math.floor(timerTime / 3600000)).slice(-2);\n\n    return (\n      <div className=\"Stopwatch\">\n        <div className=\"input-group mb-3\">\n          <select\n            className=\"form-control\"\n            id=\"projectSelect\"\n            onChange={this.handleChange}\n          >\n            <option></option>\n            {this.props.projects.map(p => (\n              <option key={p._id}>{p.name}</option>\n            ))}\n          </select>\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-outline-secondary\"\n              type=\"button\"\n              onClick={this.props.toggleModal}\n            >\n              Add\n            </button>\n          </div>\n        </div>\n\n        <div className=\"Stopwatch-timer\">\n          <h1 className=\"display-4\">\n            {hours}:{minutes}:{seconds}\n          </h1>\n        </div>\n        <div className=\"Stopwatch-controls\">\n          {this.state.timerOn === true && (\n            <button\n              className=\"btn btn-outline-secondary\"\n              onClick={this.resetTimer}\n              disabled\n            >\n              Reset\n            </button>\n          )}\n          {this.state.timerOn === false && (\n            <button\n              className=\"btn btn-outline-secondary\"\n              onClick={this.resetTimer}\n            >\n              Reset\n            </button>\n          )}\n\n          {this.state.timerOn === false && this.state.timerTime === 0 && (\n            <button className=\"btn btn-outline-info\" onClick={this.startTimer}>\n              Start\n            </button>\n          )}\n          {this.state.timerOn === true && (\n            <button className=\"btn btn-outline-info\" onClick={this.stopTimer}>\n              Stop\n            </button>\n          )}\n          {this.state.timerOn === false && this.state.timerTime > 0 && (\n            <button className=\"btn btn-outline-info\" onClick={this.startTimer}>\n              Resume\n            </button>\n          )}\n        </div>\n        {this.state.timerOn === false && this.state.timerTime > 0 && (\n          <div className=\"Stopwatch-submit\">\n            <button className=\"btn btn-info\" onClick={this.saveTime}>\n              Save\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './HistoryItem.css';\nimport edit from './../img/edit.svg';\nimport del from './../img/delete.svg';\n\nexport default class HistoryItem extends Component {\n  constructor(props) {\n    super(props);\n    this.delRecord = this.delRecord.bind(this);\n    this.editRecord = this.editRecord.bind(this);\n  }\n  delRecord() {\n    this.props.delRecord(this.props.id);\n  }\n  editRecord() {\n    this.props.editRecord(this.props.id);\n  }\n  render() {\n    return (\n      <tr>\n        <th scope=\"row\">{this.props.date}</th>\n        <td>{this.props.time}</td>\n        <td>{this.props.timeSpent}</td>\n        <td>{this.props.project}</td>\n        <td>\n          <div\n            className=\"btn-group HistoryItem-controls\"\n            role=\"group\"\n            aria-label=\"recordControls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-secondary\"\n              onClick={this.editRecord}\n            >\n              <img className=\"HistoryItem-icon\" src={edit} alt=\"edit icon\" />\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-secondary\"\n              onClick={this.delRecord}\n            >\n              <img className=\"HistoryItem-icon\" src={del} alt=\"edit icon\" />\n            </button>\n          </div>\n        </td>\n      </tr>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport HistoryItem from './HistoryItem';\nimport './History.css';\n\nexport default class History extends Component {\n  render() {\n    let records = this.props.records;\n    return (\n      <div className=\"History-container\">\n        <table className=\"table table-hover\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Date</th>\n              <th scope=\"col\">Time of Day</th>\n              <th scope=\"col\">Time Spent</th>\n              <th scope=\"col\">Project</th>\n              <th scope=\"col\"></th>\n            </tr>\n          </thead>\n          <tbody>\n            {records.map(i => (\n              <HistoryItem\n                date={i.dateString}\n                time={i.timeOfDay}\n                timeSpent={i.timeSpentString}\n                project={i.project.name}\n                id={i._id}\n                key={i._id}\n                delRecord={this.props.delRecord}\n                editRecord={this.props.editRecord}\n              />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Modal } from 'react-bootstrap';\n\nexport default class ProjectModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { projectName: '' };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleHide = this.handleHide.bind(this);\n  }\n  handleChange(evt) {\n    this.setState({ projectName: evt.target.value });\n  }\n  handleSubmit(evt) {\n    evt.preventDefault();\n    this.setState({\n      projectName: this.state.projectName\n    });\n    this.props.addProject(this.state.projectName);\n  }\n  handleHide() {\n    this.props.toggleModal();\n  }\n  render() {\n    return (\n      <Modal\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        show={this.props.show}\n        onHide={this.handleHide}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Add Project\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputEmail1\">Project Name</label>\n              <input\n                className=\"form-control\"\n                id=\"projectName\"\n                autoFocus\n                value={this.state.projectName}\n                onChange={this.handleChange}\n              />\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\n                Short names are best.\n              </small>\n              <div className=\"text-right\">\n                <button\n                  className=\"btn btn-secondary mr-2\"\n                  onClick={this.props.toggleModal}\n                >\n                  Cancel\n                </button>\n                <button className=\"btn btn-info\" type=\"submit\">\n                  Add +\n                </button>\n              </div>\n            </div>\n          </form>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport HomePageCard from '../components/HomePageCard';\nimport Stopwatch from '../components/Stopwatch';\nimport History from '../components/History';\nimport axios from 'axios';\nimport ProjectModal from '../components/ProjectModal';\n\nexport default class HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      records: [],\n      projects: [],\n      modalVisible: false\n    };\n    this.addRecord = this.addRecord.bind(this);\n    this.addProject = this.addProject.bind(this);\n    this.refreshHistory = this.refreshHistory.bind(this);\n    this.refreshProjects = this.refreshProjects.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.delRecord = this.delRecord.bind(this);\n    this.editRecord = this.editRecord.bind(this);\n  }\n  refreshHistory() {\n    try {\n      axios\n        .get(`${process.env.REACT_APP_API_PATH}/api/v1/timelogs/?sort=-date`, {\n          withCredentials: true\n        })\n        .then(res => {\n          this.setState({\n            records: res.data.data.data\n          });\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  refreshProjects() {\n    try {\n      axios\n        .get(`${process.env.REACT_APP_API_PATH}/api/v1/projects/`, {\n          withCredentials: true\n        })\n        .then(res => {\n          this.setState({\n            projects: res.data.data.data\n          });\n        });\n      this.refreshHistory();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  componentDidMount() {\n    this.refreshProjects();\n  }\n  addRecord(timeSpentString, timeSpentInt, projectId) {\n    const now = new Date();\n    const newDate = now.toDateString();\n    const options = { hour: 'numeric', minute: 'numeric' };\n    const newTime = now.toLocaleTimeString(undefined, options);\n    let newRecord = {\n      dateString: newDate.slice(3, newDate.length),\n      timeOfDay: newTime,\n      timeSpentString: timeSpentString,\n      timeSpentInt: timeSpentInt,\n      project: projectId\n    };\n    try {\n      axios\n        .post(`${process.env.REACT_APP_API_PATH}/api/v1/timelogs/`, newRecord, {\n          withCredentials: true\n        })\n        .then(res => {\n          if (res.status === 201) {\n            this.refreshHistory();\n          } else {\n            alert('Error adding new record!');\n          }\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  toggleModal() {\n    this.setState(st => ({\n      modalVisible: !st.modalVisible\n    }));\n  }\n\n  addProject(projectName) {\n    const newProject = {\n      name: projectName,\n      user: this.props.userId\n    };\n    try {\n      axios\n        .post(\n          `${process.env.REACT_APP_API_PATH}/api/v1/projects/`,\n          newProject,\n          {\n            withCredentials: true\n          }\n        )\n        .then(res => {\n          if (res.status === 201) {\n            this.refreshProjects();\n            this.toggleModal();\n          } else {\n            alert('Error adding new project!');\n          }\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  delRecord(id) {\n    console.log('record', id);\n    try {\n      axios\n        .delete(`${process.env.REACT_APP_API_PATH}/api/v1/timelogs/${id}`, {\n          withCredentials: true\n        })\n        .then(res => {\n          if (res.status === 204) {\n            this.refreshProjects();\n          } else {\n            alert('Error deleting project!');\n          }\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  editRecord(id) {\n    console.log('edit', id);\n  }\n\n  render() {\n    return (\n      <div className=\"HomePage \">\n        <h4 className=\"my-4\">Log Time</h4>\n        <div className=\"row\">\n          <HomePageCard size=\"col-md-12 col-lg-4\" title=\"Timer\">\n            <Stopwatch\n              addRecord={this.addRecord}\n              projects={this.state.projects}\n              toggleModal={this.toggleModal}\n            />\n          </HomePageCard>\n          <HomePageCard\n            size=\"col-md-12 col-lg-8 ml-mt-auto mt-lg-0\"\n            title=\"History\"\n          >\n            <History\n              records={this.state.records}\n              delRecord={this.delRecord}\n              editRecord={this.editRecord}\n            />\n          </HomePageCard>\n        </div>\n        <ProjectModal\n          toggleModal={this.toggleModal}\n          addProject={this.addProject}\n          show={this.state.modalVisible}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport default class PrivateRoute extends Component {\n  render() {\n    return (\n      <>\n        {!this.props.loggedIn ? (\n          <Redirect to=\"/login\" />\n        ) : (\n          <Route\n            exact\n            path={this.props.path}\n            render={() => this.props.children}\n          />\n        )}\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport axios from 'axios';\nimport Navbar from './components/Navbar';\nimport Login from './pages/Login';\nimport HomePage from './pages/HomePage';\nimport PrivateRoute from './PrivateRoute';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedIn: false,\n      id: ''\n    };\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n  login(email, password) {\n    try {\n      axios\n        .post(\n          `${process.env.REACT_APP_API_PATH}/api/v1/users/login`,\n          {\n            email,\n            password\n          },\n          {\n            withCredentials: true\n          }\n        )\n        .then(res => {\n          if (res.status === 200) {\n            this.setState({\n              loggedIn: true,\n              id: res.data.data.user.id\n            });\n          }\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  logout() {\n    try {\n      axios\n        .get(`${process.env.REACT_APP_API_PATH}/node/api/v1/users/logout`, {\n          withCredentials: true\n        })\n        .then(res => {\n          if (res.status === 200) {\n            this.setState({\n              loggedIn: false,\n              id: ''\n            });\n          }\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  render() {\n    return (\n      <div>\n        <Navbar loggedIn={this.state.loggedIn} logout={this.logout} />\n        <div className=\"container\">\n          <Switch>\n            <Route\n              exact\n              path=\"/login\"\n              render={routeProps => (\n                <Login\n                  {...routeProps}\n                  login={this.login}\n                  loggedIn={this.state.loggedIn}\n                />\n              )}\n            />\n            <PrivateRoute path=\"/\" loggedIn={this.state.loggedIn}>\n              <HomePage userId={this.state.id} />\n            </PrivateRoute>\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.REACT_APP_API_SUBDOMAIN}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}